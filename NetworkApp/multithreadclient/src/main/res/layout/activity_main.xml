<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.test.administrator.multithreadclient.MainActivity">
    <EditText
        android:id="@+id/editText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:lines="2"
        android:hint="输入一些要发往服务器的东西"/>
    <Button
        android:id="@+id/bt"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="发送"
        android:onClick="send"
        android:layout_below="@id/editText"/>
    <TextView
        android:id="@+id/textView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#0ff"
        android:layout_below="@id/bt"
         />
    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/textView">
        <TextView
            android:id="@+id/textView2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textSize="20sp"
            android:text="一个模拟多客户端与服务器端通信(多人聊天)的例子,注意:DLUT不和教学区网线在一个网段\n
        这是客户端,在电脑(服务器)上开启一个服务器java程序,在这个客户端总共有3个线程
        定义了主线程和子线程1,在子线程1内又启动了一个子线程2
        主线程中定义了一个handler用来更新UI,子线程1中开启Socket建立服务器连接,并定义了一个Handlder用来接收主线程的数据,将用户输入的数据同过Socket
        发送给服务器.子线程2用来接收服务器发来的数据,并通知主线程去更新UI,把接收到的数据显示在界面上
        服务器端:不断监听socket连接,如果有客户端发起连接,就把这个socket加入到一个socketList中去,当收到一个客户端发来的数据后,通过迭代器
        把数据发送给所有在socketList中的客户端"
            />
    </ScrollView>

</RelativeLayout>
